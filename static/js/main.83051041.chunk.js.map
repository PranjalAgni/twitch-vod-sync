{"version":3,"sources":["utils.ts","components/Timeline/Timeline.tsx","components/VideoPicker/VideoPicker.tsx","components/Viewer/Viewer.tsx","components/VodSyncApp/VodSyncApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["npad","num","size","s","length","formatDate","d","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","parseDuration","m","match","Number","Error","color","id","Timeline","props","videos","className","Array","from","entries","sort","a","b","startDate","Date","Math","min","map","getTime","endDate","max","v","duration","e","lineHeight","lines","idx","info","key","height","y","x","width","style","fill","position","undefined","currentPosition","onClick","evt","ratio","clientX","window","innerWidth","onSeek","VideoPicker","inputRef","handleSubmit","bind","React","createRef","preventDefault","this","current","value","video","console","log","onVideoPicked","error","onSubmit","type","name","ref","placeholder","PureComponent","Viewer","player","delayRef","state","initialState","handleVideoPicked","handleDelayChange","reset","delay","prevProps","prevState","videoDate","pause","seek","offset","play","setState","fetch","headers","clientId","Authorization","accessToken","response","status","json","videoInfo","data","created_at","videoDuration","setVideoInfo","Twitch","Player","autoplay","isNaN","display","justifyContent","defaultValue","VodSyncApp","interval","handlePlayerStateChange","handleSeek","resized","addEventListener","location","hash","playerState","Map","innerHeight","setInterval","computeCurrentPosition","clearInterval","removeEventListener","set","delete","videosArray","values","start","end","minOffset","maxOffset","onChange","setTimeout","href","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.83051041.chunk.js","sourcesContent":["function npad(num: number, size: number): string {\n  let s = '' + num;\n  while (s.length < size) {\n    s = '0' + s;\n  }\n  return s;\n}\n\nexport function formatDate(d: Date): string {\n  return (\n    d.getFullYear() +\n    '-' +\n    npad(d.getMonth() + 1, 2) +\n    '-' +\n    npad(d.getDate(), 2) +\n    ' ' +\n    npad(d.getHours(), 2) +\n    ':' +\n    npad(d.getMinutes(), 2) +\n    ':' +\n    npad(d.getSeconds(), 2)\n  );\n}\n\nexport function parseDuration(s: string): number {\n  const m = s.match(/(?:([0-9]+)h)?([0-9]+)m([0-9]+)s/);\n  if (!m) {\n    throw Error('Invalid duration');\n  } else if (m[1]) {\n    return Number(m[1]) * 3600 + Number(m[2]) * 60 + Number(m[3]);\n  } else {\n    return Number(m[2]) * 60 + Number(m[3]);\n  }\n}\n","import React from 'react';\nimport { formatDate } from '../../utils';\nimport { VideoInfo } from '../../types';\nimport './Timeline.css';\n\ninterface TimelineProps {\n  videos: Map<number, VideoInfo>;\n  currentPosition?: Date;\n  onSeek: (position: Date) => void;\n}\n\nfunction color(id: number) {\n  if (id === 1) {\n    return '#aaf';\n  } else if (id === 2) {\n    return '#faa';\n  } else if (id === 3) {\n    return '#afa';\n  } else if (id === 4) {\n    return '#aff';\n  } else if (id === 5) {\n    return '#faf';\n  } else {\n    return '#ffa';\n  }\n}\n\nexport function Timeline(props: TimelineProps) {\n  if (props.videos.size === 0) {\n    return <div className=\"timestamps\"></div>;\n  }\n  const videos = Array.from(props.videos.entries());\n  videos.sort((a, b) => a[0] - b[0]);\n  const startDate = new Date(\n    Math.min(...videos.map(([i, v]) => v.startDate.getTime()))\n  );\n  const endDate = new Date(\n    Math.max(\n      ...videos.map(([i, v]) => v.startDate.getTime() + v.duration * 1000)\n    )\n  );\n\n  const s = startDate.getTime(),\n    e = endDate.getTime();\n\n  function handleClick(evt: React.MouseEvent) {\n    const ratio = evt.clientX / window.innerWidth;\n    props.onSeek(new Date(s + (e - s) * ratio));\n  }\n\n  const lineHeight = 100.0 / videos.length;\n\n  const lines = videos.map(([id, info], idx) => (\n    <rect\n      key={id}\n      height={lineHeight + '%'}\n      y={lineHeight * idx + '%'}\n      x={((info.startDate.getTime() - s) / (e - s)) * 100.0 + '%'}\n      width={(info.duration / (e - s)) * 1000.0 * 100.0 + '%'}\n      style={{ fill: color(id) }}\n    />\n  ));\n\n  let position = undefined;\n  if (props.currentPosition) {\n    position = (\n      <rect\n        height={'100%'}\n        width={'2px'}\n        x={((props.currentPosition.getTime() - s) / (e - s)) * 100.0 + '%'}\n        style={{ fill: 'black' }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"timestamps\" onClick={handleClick}>\n      <svg style={{ width: '100%', position: 'absolute', height: '100%' }}>\n        {lines}\n        {position}\n      </svg>\n      <div>\n        <div>{formatDate(startDate)}</div>\n        <div>\n          {props.currentPosition\n            ? formatDate(props.currentPosition)\n            : undefined}\n        </div>\n        <div>{formatDate(endDate)}</div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\ninterface VideoPickerProps {\n  onVideoPicked: (video: number) => void;\n}\n\nexport class VideoPicker extends React.PureComponent<VideoPickerProps> {\n  inputRef: React.RefObject<HTMLInputElement>;\n\n  constructor(props: VideoPickerProps) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.inputRef = React.createRef();\n  }\n\n  handleSubmit(evt: React.FormEvent<HTMLFormElement>) {\n    evt.preventDefault();\n    if (this.inputRef.current) {\n      const value = this.inputRef.current.value;\n      const m = value.match(\n        /^(?:https?:\\/\\/(?:www\\.|m\\.)?twitch\\.tv\\/videos\\/)?([0-9]+)(?:\\?.*)?$/\n      );\n      if (m) {\n        const video = Number(m[1]);\n        console.log('Picked video: ', value, ' ', video);\n        this.props.onVideoPicked(video);\n      } else {\n        console.log('Wrong URL: ', value);\n      }\n    } else {\n      console.error('No inputRef');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"picker\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"video\"\n            ref={this.inputRef}\n            placeholder=\"Twitch video URL\"\n          />\n          <input type=\"submit\" value=\"Watch\" />\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { VideoInfo, PlayerState } from '../../types';\nimport { parseDuration } from '../../utils';\nimport { VideoPicker } from '../VideoPicker/VideoPicker';\n\ninterface ViewerProps {\n  id: number;\n  clientId: string;\n  accessToken: string;\n  state?: PlayerState;\n  setVideoInfo: (id: number, info: VideoInfo | undefined) => void;\n  onChange: (id: number, playerState: PlayerState) => void;\n  width: number;\n  height: number;\n}\n\ninterface ViewerState {\n  delay: number;\n  video?: number;\n  videoDate?: Date;\n  videoDuration?: number;\n}\n\nexport class Viewer extends React.PureComponent<ViewerProps, ViewerState> {\n  player?: Twitch.Player;\n  delayRef?: React.RefObject<HTMLInputElement>;\n\n  constructor(props: ViewerProps) {\n    super(props);\n    this.state = this.initialState();\n    this.player = undefined;\n    this.delayRef = React.createRef();\n    this.handleVideoPicked = this.handleVideoPicked.bind(this);\n    this.handleDelayChange = this.handleDelayChange.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  initialState() {\n    return {\n      delay: 0,\n    };\n  }\n\n  componentDidUpdate(prevProps: ViewerProps, prevState: ViewerState) {\n    if (\n      this.props.state &&\n      (this.props.state !== prevProps.state ||\n        this.state.delay !== prevState.delay) &&\n      this.player &&\n      this.state.videoDate\n    ) {\n      if (this.props.state.state === 'paused') {\n        this.player.pause();\n        this.player.seek(\n          (this.props.state.position.getTime() -\n            this.state.videoDate.getTime()) /\n            1000.0 +\n            this.state.delay\n        );\n      } else if (this.props.state.state === 'playing') {\n        const seek =\n          new Date().getTime() / 1000.0 +\n          this.props.state.offset -\n          this.state.videoDate.getTime() / 1000.0 +\n          this.state.delay;\n        this.player.seek(seek);\n        this.player.play();\n      }\n    }\n  }\n\n  async handleVideoPicked(video: number) {\n    this.setState({ video });\n\n    // Get video information from API\n    const response = await fetch(\n      'https://api.twitch.tv/helix/videos?id=' + video,\n      {\n        headers: {\n          'Client-ID': this.props.clientId,\n          Authorization: 'Bearer ' + this.props.accessToken,\n        },\n      }\n    );\n    if (response.status === 200) {\n      const json = await response.json();\n      const videoInfo = json.data[0];\n      console.log('Got video date: ', videoInfo.created_at);\n      const videoDate = new Date(videoInfo.created_at);\n      const videoDuration = parseDuration(videoInfo.duration);\n      this.setState({\n        videoDate,\n        videoDuration,\n      });\n      this.props.setVideoInfo(this.props.id, {\n        startDate: videoDate,\n        duration: videoDuration,\n      });\n    }\n\n    // Create player\n    this.player = new Twitch.Player('player' + this.props.id, {\n      width: '100%',\n      height: '100%',\n      video,\n      autoplay: false,\n    });\n    console.log('Created player', this.player);\n  }\n\n  handleDelayChange(evt: React.FormEvent) {\n    evt.preventDefault();\n    if (this.delayRef?.current) {\n      let delay = Number(this.delayRef.current.value);\n      if (isNaN(delay)) {\n        delay = 0;\n      }\n      this.setState({ delay });\n      this.delayRef.current.value = '' + delay;\n    }\n  }\n\n  reset() {\n    this.setState({\n      delay: 0,\n      video: undefined,\n      videoDate: undefined,\n      videoDuration: undefined,\n    });\n    this.props.setVideoInfo(this.props.id, undefined);\n  }\n\n  render() {\n    if (this.state.video) {\n      return (\n        <div\n          style={{\n            width: this.props.width + 'px',\n            height: this.props.height + 'px',\n          }}\n        >\n          <div\n            id={'player' + this.props.id}\n            className=\"player\"\n            style={{\n              width: this.props.width + 'px',\n              height: this.props.height - 35 + 'px',\n            }}\n          ></div>\n          <div\n            style={{\n              height: '35px',\n              display: 'flex',\n              justifyContent: 'space-evenly',\n            }}\n          >\n            <form onSubmit={this.handleDelayChange}>\n              Delay:{' '}\n              <input\n                type=\"text\"\n                name=\"delay\"\n                ref={this.delayRef}\n                defaultValue={this.state.delay}\n              />{' '}\n              <input type=\"submit\" value=\"Set\" />\n            </form>\n            <input type=\"button\" onClick={this.reset} value=\"Reset\" />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          style={{\n            width: this.props.width + 'px',\n            height: this.props.height + 'px',\n          }}\n        >\n          <VideoPicker onVideoPicked={this.handleVideoPicked} />\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport './VodSyncApp.css';\nimport { VideoInfo, PlayerState } from '../../types';\nimport { Timeline } from '../Timeline/Timeline';\nimport { Viewer } from '../Viewer/Viewer';\n\nconst TWITCH_CLIENT_ID = 'r69vc9claq1m3n960hrkuszot4nx54';\n\ninterface VodSyncAppProps {}\n\ninterface VodSyncAppState {\n  accessToken: string | null;\n  playerState: PlayerState;\n  currentPosition?: Date;\n  videos: Map<number, VideoInfo>;\n  width: number;\n  height: number;\n}\n\nexport class VodSyncApp extends React.PureComponent<\n  VodSyncAppProps,\n  VodSyncAppState\n> {\n  interval?: number;\n\n  constructor(props: VodSyncAppProps) {\n    super(props);\n    this.state = this.initialState();\n    this.setVideoInfo = this.setVideoInfo.bind(this);\n    this.handlePlayerStateChange = this.handlePlayerStateChange.bind(this);\n    this.handleSeek = this.handleSeek.bind(this);\n    this.resized = this.resized.bind(this);\n    window.addEventListener('resize', this.resized);\n  }\n\n  initialState(): VodSyncAppState {\n    const match = window.location.hash.match(/#access_token=([^&]+)/);\n    let accessToken = null;\n    if (match && match[1]) {\n      accessToken = match[1];\n      console.log('Got access token: ', accessToken);\n    }\n    return {\n      accessToken,\n      playerState: {\n        state: 'paused',\n        position: new Date(1),\n      },\n      videos: new Map(),\n      width: window.innerWidth / 2 - 6,\n      height: window.innerHeight - 20 - 6,\n    };\n  }\n\n  componentDidMount() {\n    this.interval = window.setInterval(\n      this.computeCurrentPosition.bind(this),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.interval !== undefined) {\n      window.clearInterval(this.interval);\n      this.interval = undefined;\n    }\n    window.removeEventListener('resize', this.resized);\n  }\n\n  resized() {\n    this.setState({\n      width: window.innerWidth / 2 - 6,\n      height: window.innerHeight - 20 - 6,\n    });\n  }\n\n  setVideoInfo(id: number, info: VideoInfo | undefined) {\n    console.log('setVideoInfo: ', id, ', ', info);\n    this.setState(state => {\n      const videos = new Map(state.videos);\n      if (info) {\n        videos.set(id, info);\n      } else {\n        videos.delete(id);\n      }\n\n      // Update the player state to fall within at least one video\n      let playerState = state.playerState;\n      if (state.videos.size > 0) {\n        const videosArray = Array.from(state.videos.values());\n        const start = Math.min(...videosArray.map(v => v.startDate.getTime()));\n        const end = Math.max(\n          ...videosArray.map(v => v.startDate.getTime() + v.duration * 1000)\n        );\n        if (this.state.playerState.state === 'paused') {\n          if (this.state.playerState.position.getTime() < start) {\n            playerState = {\n              state: 'paused',\n              position: new Date(start),\n            };\n          } else if (this.state.playerState.position.getTime() > end) {\n            playerState = {\n              state: 'paused',\n              position: new Date(end),\n            };\n          }\n        } else if (this.state.playerState.state === 'playing') {\n          const minOffset = (start - new Date().getTime()) / 1000.0;\n          const maxOffset = (end - new Date().getTime()) / 1000.0;\n          if (this.state.playerState.offset < minOffset) {\n            playerState = {\n              state: 'playing',\n              offset: minOffset,\n            };\n          } else if (this.state.playerState.offset > maxOffset) {\n            playerState = {\n              state: 'playing',\n              offset: maxOffset,\n            };\n          }\n        }\n      }\n      return { videos, playerState };\n    });\n  }\n\n  handlePlayerStateChange(id: number, playerState: PlayerState) {\n    // TODO: Handle unexpected state change in players\n  }\n\n  computeCurrentPosition() {\n    this.setState(state => {\n      let currentPosition;\n      if (state.playerState?.state === 'paused') {\n        currentPosition = state.playerState.position;\n      } else if (state.playerState?.state === 'playing') {\n        currentPosition = new Date(\n          new Date().getTime() + state.playerState.offset * 1000.0\n        );\n      } else {\n        return {};\n      }\n      return { currentPosition };\n    });\n  }\n\n  handleSeek(position: Date) {\n    const offset = (position.getTime() - new Date().getTime()) / 1000.0;\n    this.setState({\n      playerState: {\n        state: 'playing',\n        offset,\n      },\n    });\n  }\n\n  render() {\n    if (!this.state.accessToken) {\n      setTimeout(() => {\n        window.location.href =\n          'https://id.twitch.tv/oauth2/authorize?client_id=' +\n          TWITCH_CLIENT_ID +\n          '&redirect_uri=https://remram44.github.io/twitch-vod-sync/&response_type=token&scope=';\n      }, 2000);\n      return <p>Redirecting you to Twitch to authorize use of their API...</p>;\n    }\n\n    return (\n      <>\n        <div className=\"container\">\n          <Viewer\n            id={1}\n            clientId={TWITCH_CLIENT_ID}\n            accessToken={this.state.accessToken}\n            state={this.state.playerState}\n            setVideoInfo={this.setVideoInfo}\n            onChange={this.handlePlayerStateChange}\n            width={this.state.width}\n            height={this.state.height}\n          />\n          <Viewer\n            id={2}\n            clientId={TWITCH_CLIENT_ID}\n            accessToken={this.state.accessToken}\n            state={this.state.playerState}\n            setVideoInfo={this.setVideoInfo}\n            onChange={this.handlePlayerStateChange}\n            width={this.state.width}\n            height={this.state.height}\n          />\n        </div>\n        <Timeline\n          currentPosition={this.state.currentPosition}\n          videos={this.state.videos}\n          onSeek={this.handleSeek}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { VodSyncApp } from './components/VodSyncApp/VodSyncApp';\n\nexport function App() {\n  return <VodSyncApp />;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}